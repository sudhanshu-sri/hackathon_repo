name: Python Application CI/CD
on:
  push:
    branches:
      - main
  workflow_dispatch: null
  pull_request:
    branches:
      - main
jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: sudhsriv510/pythonapp
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{secrets.AWS_REGION}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: my-ecr-public-registry-alias
          REPOSITORY: my-ecr-public-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
      #- name: Log in to Docker Hub
       # uses: docker/login-action@v2
        #with:
         # username: ${{ secrets.DOCKER_USERNAME }}
          #password: ${{ secrets.DOCKER_PASSWORD }}
      #- name: Build Docker image
       # run: |
        #  docker build -t $DOCKER_IMAGE:${{ github.sha }} .
         # docker tag $DOCKER_IMAGE:${{ github.sha }} $DOCKER_IMAGE:latest
      #- name: Push Docker image
       # run: |
        #  docker push $DOCKER_IMAGE:${{ github.sha }}
         # docker push $DOCKER_IMAGE:latest
      - name: Official SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v3.0.0
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=hackathon-proj -Dsonar.host.url=${{ env.SONAR_HOST_URL
            }} -Dsonar.login=${{ env.SONAR_TOKEN }}
            -Dsonar.working.directory=./.scannerwork
      - name: Print SonarQube Logs
        run: >
          ls -al .scannerwork
          cat .scannerwork/report-task.txt || echo "report-task.txt not found"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
           version: 'v1.24.0' # default is latest stable
        id: install
      - name: Update kube config
        run: aws eks update-kubeconfig --region us-east-1 --name hackathon-k8s
      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
